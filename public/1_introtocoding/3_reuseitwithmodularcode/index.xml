<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reuse it with modular code on Educational material for LSU Programming Digital Media</title>
    <link>/1_introtocoding/3_reuseitwithmodularcode/</link>
    <description>Recent content in Reuse it with modular code on Educational material for LSU Programming Digital Media</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/1_introtocoding/3_reuseitwithmodularcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code that does a thing - functions</title>
      <link>/1_introtocoding/3_reuseitwithmodularcode/1_lesson_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1_introtocoding/3_reuseitwithmodularcode/1_lesson_1/</guid>
      <description>How Functions Work So far throughout this course we have been utilizing various functions such as setup(), draw(), ellipse(), etc. You may have noticed a few things in common between each of these.
Functions cals are indicated by the function name followed by a set of parentheses; such as background(). At their core, functions can take in certain values and utilize them to perform a task, or return a new value.</description>
    </item>
    
    <item>
      <title>Code that is a thing - Objects with class</title>
      <link>/1_introtocoding/3_reuseitwithmodularcode/2_lesson_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1_introtocoding/3_reuseitwithmodularcode/2_lesson_2/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>